name: CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-16.04
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Install packages
      run: sudo apt-get update && sudo apt-get install -y git nano build-essential git subversion gfortran mpich libhdf5-serial-dev libfftw3-dev libgsl0-dev libssl-dev liblapack-dev hdf5-tools ccache pkg-config  locales
      # texlive-latex-extra tex4ht
    - name: Download GetComponents
      run: |
        curl -kLO https://raw.githubusercontent.com/gridaphobe/CRL/master/GetComponents
        chmod a+x GetComponents
        
#    - name: Download thornlist
#      run: curl -kLO https://bitbucket.org/einsteintoolkit/manifest/raw/master/einsteintoolkit.th
        
 #   - name: Cache build for testing
 #     uses: actions/cache@v1
 #     env:
 #       cache-name: cache-toolkit
 #     with:
 #       path: ~/Cactus
 #       # Note: this doens't make sense in general, as the thorns could have been updated. But it's useful for tetsing.
 #       key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('minimal.th') }}
 #       restore-keys: |
 #         ${{ runner.os }}-build-${{ env.cache-name }}-
 #         ${{ runner.os }}-build-
 #         ${{ runner.os }}-

    - name: Download toolkit
      #run: ./GetComponents --parallel https://bitbucket.org/einsteintoolkit/manifest/raw/master/einsteintoolkit.th
      run: ./GetComponents --parallel minimal.th

    - name: Build the toolkit
      run: |
        cd Cactus
        simfactory/bin/sim setup-silent
        time simfactory/bin/sim build -j4 --thornlist ../minimal.th

    - name: Run Hello World
      run: |
        cd Cactus
        simfactory/bin/sim create-run helloworld --parfile arrangements/CactusExamples/HelloWorld/par/HelloWorld.par
        
    - name: Run tests
      run: |
        cd Cactus
        simfactory/bin/sim create-run --testsuite --procs 1 --num-threads 1 tests_sim
    
    - name: Analyse test results
      run: |
        export PATH=$PWD/bin:$PATH
        table-from-summary /home/runner/simulations/tests_sim/output-0000/TEST/sim/summary.log >results-table.txt
        while read thorn test result; do
          if [ $result = Success ]; then
            echo "::warning ::Test $thorn/$test succeeded"
          elif [ $result = Failure ]; then
            echo "::error ::Test $thorn/$test failed"
          fi
        done < results-table.txt

    - name: Upload test results file
      uses: actions/upload-artifact@v1
      with:
        name: summary.log
        path: /home/runner/simulations/tests_sim/output-0000/TEST/sim/summary.log

    - name: Upload test results table
      uses: actions/upload-artifact@v1
      with:
        name: results-table.txt
        path: results-table.txt
